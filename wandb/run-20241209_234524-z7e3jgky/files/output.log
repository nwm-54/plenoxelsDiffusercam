Output folder: ./output/lego_v4_800_tv_0.46567
Found transforms_train.json file, assuming Blender data set!
Reading Training Transforms
adjacent views [180, 179, 178, 181, 177, 176]
len train 16
Reading Test Transforms
adjacent views [180, 179, 178, 181, 177, 176]
len test 6
full len test 194
Loading Training Cameras
Loading Test Cameras
Loading Full Test Cameras
Number of points at initialisation :  100000
tv weight  0.4656719466146307
/home/vitran/gs7/scene/multiplexing.py:161: RuntimeWarning: invalid value encountered in true_divide
  rgb[i_index,j_index] = rgb[i_index,j_index] / cnt_subpixels[i_index, j_index] +1e-9#MAX_PER_PIXEL
MAX VALUE nan

Training progress:   0%|▏                                             | 10/3000 [00:01<09:36,  5.19it/s, Loss=nan]
[ITER 10] Evaluating test: L1 0.12724263717730838 PSNR 12.150938193003336










Training progress:  10%|████▌                                        | 300/3000 [00:25<02:41, 16.70it/s, Loss=nan]
[ITER 300] Evaluating test: L1 0.1272326459487279 PSNR 12.150952816009521







Training progress:  17%|███████▌                                     | 500/3000 [00:43<02:33, 16.28it/s, Loss=nan]
[ITER 500] Evaluating test: L1 0.1272326459487279 PSNR 12.150952816009521
















Training progress:  33%|██████████████▋                             | 1000/3000 [01:19<01:59, 16.78it/s, Loss=nan]
[ITER 1000] Evaluating test: L1 0.1272326459487279 PSNR 12.150952816009521
Training progress:  33%|██████████████▋                             | 1000/3000 [01:19<01:59, 16.78it/s, Loss=nan]Traceback (most recent call last):
  File "train_sim.py", line 458, in <module>
    training(lp.extract(args), op.extract(args), pp.extract(args), args.test_iterations, args.save_iterations, args.checkpoint_iterations, args.start_checkpoint, args.debug_from)
  File "train_sim.py", line 272, in training
    training_report(tb_writer, iteration, Ll1, loss, l1_loss, iter_start.elapsed_time(iter_end), testing_iterations, scene, render, (pipe, background), pair, tv_image, tv_loss, model_path, gt_image) #gt_image for multiplexing #random.choice(gt_list) for non-multiplexing
  File "train_sim.py", line 416, in training_report
    tb_writer.add_histogram("scene/opacity_histogram", scene.gaussians.get_opacity, iteration)
  File "/home/vitran/miniconda3/envs/gaussian_splatting/lib/python3.7/site-packages/torch/utils/tensorboard/writer.py", line 484, in add_histogram
    histogram(tag, values, bins, max_bins=max_bins), global_step, walltime
  File "/home/vitran/miniconda3/envs/gaussian_splatting/lib/python3.7/site-packages/torch/utils/tensorboard/summary.py", line 352, in histogram
    hist = make_histogram(values.astype(float), bins, max_bins)
  File "/home/vitran/miniconda3/envs/gaussian_splatting/lib/python3.7/site-packages/torch/utils/tensorboard/summary.py", line 396, in make_histogram
    raise ValueError("The histogram is empty, please file a bug report.")
ValueError: The histogram is empty, please file a bug report.